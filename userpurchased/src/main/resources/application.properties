# ===============================
# SPRING CONFIG
# ===============================
spring.application.name=userpurchased
spring.config.import=optional:file:.env[.properties]
# ===============================
# DATABASE
# ===============================
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/point_earned
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.schema=${DB_SCHEMA}

# ===============================
# JPA / HIBERNATE
# ===============================
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ===============================
# SERVER PATH
# ===============================
server.servlet.context-path=/api

# ===============================
# AWS CONFIG
# ===============================
aws.accessKeyId=${AWS_ACCESS_KEY}
aws.accessSecretKey=${AWS_SECRET_KEY}
aws.bucketName=${AWS_BUCKET_NAME}
aws.endpointUrl=${AWS_ENDPOINT}

# ===============================
# KAFKA CONFIG
# ===============================
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: group_id
spring.kafka.consumer.auto-offset-reset: earliest
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer